<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ince.gigalike.mapper.NotificationMapper">

    <resultMap id="BaseResultMap" type="com.ince.gigalike.model.entity.Notification">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="userId" column="user_id" jdbcType="BIGINT"/>
        <result property="senderId" column="sender_id" jdbcType="BIGINT"/>
        <result property="type" column="type" jdbcType="VARCHAR"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="content" column="content" jdbcType="LONGVARCHAR"/>
        <result property="relatedId" column="related_id" jdbcType="BIGINT"/>
        <result property="relatedType" column="related_type" jdbcType="VARCHAR"/>
        <result property="isRead" column="is_read" jdbcType="TINYINT"/>
        <result property="readTime" column="read_time" jdbcType="TIMESTAMP"/>
        <result property="extraData" column="extra_data" jdbcType="LONGVARCHAR" 
                typeHandler="com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!-- 分页查询用户通知（包含发送者信息） -->
    <select id="selectNotificationPageWithSender" resultMap="BaseResultMap">
        SELECT 
            n.id,
            n.user_id,
            n.sender_id,
            n.type,
            n.title,
            n.content,
            n.related_id,
            n.related_type,
            n.is_read,
            n.read_time,
            n.extra_data,
            n.create_time,
            n.update_time
        FROM notifications n
        WHERE n.user_id = #{userId}
        <if test="isRead != null">
            AND n.is_read = #{isRead}
        </if>
        <if test="type != null and type != ''">
            AND n.type = #{type}
        </if>
        ORDER BY n.create_time DESC
    </select>

    <!-- 获取用户未读通知数量 -->
    <select id="countUnreadByUserId" resultType="int">
        SELECT COUNT(*)
        FROM notifications
        WHERE user_id = #{userId} AND is_read = 0
    </select>

    <!-- 删除用户的旧通知（保留最近的指定数量） -->
    <delete id="deleteOldNotifications">
        DELETE FROM notifications
        WHERE user_id = #{userId}
        AND id NOT IN (
            SELECT id FROM (
                SELECT id
                FROM notifications
                WHERE user_id = #{userId}
                ORDER BY create_time DESC
                LIMIT #{keepCount}
            ) AS temp
        )
    </delete>

</mapper> 